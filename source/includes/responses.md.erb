# Responses

## List a project's responses

Returns a list of responses to a specified project. Note that in order to retrieve the `assignees` or `archived_responses` keys in the returned data, you'll need to use the [single response endpoint](#retrieve-a-single-response).

```shell
curl "https://screendoor.dobt.co/api/projects/2/responses?v=1&api_key=d9763djh1274"

# Example Response
[
<%= partial 'resources/response.json' %>]
```

### HTTP Request

`GET /projects/:project_id/responses`

### Query Parameters

| Parameter | Default | Description |
| --- | --- | --- | --- |
| sort | `"id"` | One of `"id"`, `"submitted_at"`, `"responses_updated_at"`, `"status"`, `"has_signature"`, `"num_ratings"`, `"responder"`, `"responder_email"`, `"assigned"`, `"average_rating"`, `"edit_status"`  |
| direction | `"asc"` | Either `"asc"` or `"desc"` |
| trash | `false` | Set this to `true` to view responses that are in the trash. |

In addition to the parameters above, this endpoint accepts the same query parameters as Screendoor's [responses page](http://help.dobt.co/articles/screendoor/responses/viewing_a_list_of_responses.html).

To find the correct parameters, consider using [advanced search](http://help.dobt.co/articles/screendoor/responses/searching_for_responses.html#using-simple-and-advanced-search) to construct a query. Then copy the `?advanced_search=` part of the resulting URL.

(Since API keys aren't associated with individual users, you will not be able to use query parameters that refer to "my rating.")

### Response Data

See [Retrieve a single response](#retrieve-a-single-response)

## Create a response

Creates a response to the specified project.

```shell
curl "https://screendoor.dobt.co/api/projects/2/responses?v=1&api_key=d9763djh1274" \
  -H 'Content-Type: application/json' \
  -X POST \
  -d '
{
  "response_fields": {
    "1": "Vivian Cronin",
    "2": "emmanuelle@goyette.co.uk",
    "3": "New application for your job on Startuply",
    "4": "To Whom it May Concern: I am very interested in working at your company. The widgets you make are AMAZING, and I would love to be a part of it. I have many skills, but the most important ones are my abilities to collect information from people, screen it effectively, select the right options, and follow through with the right options quickly. Plus, I even know what to do with the options we did not select. Adding me to your team means saving time, saving money and getting back to doing the work you love doing.\n"
  },
  "skip_email_confirmation": true,
  "skip_notifications": true,
  "skip_validation": true,
  "status": "Starred",
  "labels": ["Great", "Needs more information"]
}
'

# Example Response
<%= partial 'resources/response.json' %>
```

### HTTP Request

`POST /projects/:project_id/responses`

### Options

| Parameter | Type | Default | Description |
| --- | --- | --- | --- |
| response_fields | hash | {} | See [the spec](#spec-for-the-response-hash) below
| skip_email_confirmation | boolean | false | If `false`, the respondent receives an email confirming submission of the response.  |
| skip_notifications | boolean | false | If `false`, administrators receive notification that the response was submitted. |
| skip_validation | boolean | false | If `false`, validation errors are raised if the response is invalid. |
| status | string | *set inside Screendoor* | The only possible values are statutes set within the Screendoor project. |
| labels | array | [] | Possible values in the array: label names already used in the project and new labels names. |

## Retrieve a single response

Retrieves a response with the given `:response_id`.

```shell
curl "https://screendoor.dobt.co/api/projects/2/responses/3?v=1&api_key=d9763djh1274"

# Example Response
<%= partial 'resources/response_detailed.json' %>
```

### HTTP Request

`GET /projects/:project_id/responses/:response_id`

### Query Parameters

| Parameter | Default | Description |
| --- | --- | --- |
| response_format | raw | `raw`, `text`, or `html` |

### Response Data

The `submission_source` field contains information on where the response was submitted from. `submission.type` will be one of the following:

- `"unknown"`
- `"frontend"`
- `"admin"`
- `"embedded"`
- `"email"`
- `"imported"`

`submission.hostname` will be one of the following:

- the Screendoor forms domain (forms.fm) when `type` is `"frontend"`
- the hostname of the page the form is embedded on when `type` is `"embedded"`
- `null` for other types or when we don't have the URL of the embedded form.

## Update a response

Updates the specified response.

```shell
curl "https://screendoor.dobt.co/api/projects/2/responses/2?v=1&api_key=d9763djh1274" \
  -H 'Content-Type: application/json' \
  -X PUT \
  -d '
{
  "response_fields": {
    "1": "Veronica Cronin",
    "2": "emmanuelle@goyette.co.uk"
  },
  "status": "Accepted"
}
'

# Example Response
<%= partial 'resources/response.json' %>
```

### HTTP Request

`PUT /projects/:project_id/responses/:response_id`

### Options

| Parameter | Type | Default | Description |
| --- | --- | --- | --- |
| response_fields | hash | {} | See [the spec](#spec-for-the-response-hash) below
| force_validation | boolean | false | If `false`, validations errors are raised if the response is invalid. |
| status | string | *set inside Screendoor* | The only possible values are statutes set within the Screendoor project.  |
| labels | array | [] | Possible values in the array: label names already used in the project and new label names. |

## Delete a response

Moves the response with the given `:response_id` to the trash.

```shell
curl "https://screendoor.dobt.co/api/projects/2/responses/3?v=1&api_key=d9763djh1274" \
  -H 'Content-Type: application/json' \
  -X DELETE

# Example Response
Status: 204 No Content
```

### HTTP Request

`DELETE /projects/:project_id/responses/:response_id`

## Recover a response

Recovers the response with the given `:response_id` from the trash.

```shell
curl "https://screendoor.dobt.co/api/projects/2/responses/3/recover?v=1&api_key=d9763djh1274" \
  -H 'Content-Type: application/json' \
  -X POST

# Example Response
<%= partial 'resources/response.json' %>
```

### HTTP Request

`POST /projects/:project_id/responses/:response_id/recover`

## Permanently destroy a response

Delete a response forever, skipping the trash.

```shell
curl "https://screendoor.dobt.co/api/projects/2/responses/3/delete_forever?v=1&api_key=d9763djh1274" \
  -H 'Content-Type: application/json' \
  -X DELETE

# Example Response
Status: 204 No Content
```

### HTTP Request

`DELETE /projects/:project_id/responses/:response_id/delete_forever`

## Spec for the response hash

In order to encode a response to a Screendoor form, you must use the format defined below. In each key-value pair, the key is the ID of your response field, and the value depends on the type of that field. (You can find the ID of a response field in Screendoor's form builder, at the bottom of the "Edit field" pane.) See [an example](#update-a-response) of a complete payload above.

| Field type | Format |
| --- | --- | --- |
| Text | `"foo"` |
| Paragraph | `"I have many skills, but the most important ones are my abilities to collect information from people, screen it effectively, select the right options, and follow through with the right options quickly."` |
| Choose Many (Checkboxes) | `{ "checked": ["Choice #1", "Choice #2"], "other_checked": true, "other_text": "foobar!" }` |
| Choose One (Radio) | `{ "checked": ["Choice #1"], "other_checked": true, "other_text": "foobar!" }` |
| Confirm | `true` |
| Dropdown | `"Choice #2"` |
| Date | `{ "month": "2", "day": "15", "year": "2015"}` |
| Time | `{ "am_pm": "PM", "hours": "6", "minutes": "01", "seconds": "30"}` |
| Phone | `"4151234567"` |
| Email | `"foo@bar.com"` |
| Address | `{ "country": "US", "street": "123 Main St.", "city": "Pleasantville", "state": "Illinois" }` |
| Table | `{ "column one": ["row 1", "row 2"], "column two": ["row 1", "row 2"] }` |
| Numeric | `"123.45"` |
| Website | `"http://www.google.com"` |
| Price | `{ "dollars": "12", "cents": "99" }` |
| File | `[{ "id": "b42Unp-Oj_qeyCWNDaTBXr8nygNq5x4-" }, { "id": "another_file_id" }]`<br><br>To get this ID, first upload a file using the endpoint described [below](#uploading-files). |
| Map Marker | `[40.7700118", -73.9800453]` |

## Uploading files

In order to include a file in the [response fields hash](#spec-for-the-response-hash), you must first upload it using the following endpoint.

```shell
curl "https://screendoor.dobt.co/api/form_renderer/file?v=1&response_field_id=123" \
  -X POST \
  -F "file=@/path/to/file"

# Example Response
{
  "ok":true,
  "file_id":"b42Unp-Oj_qeyCWNDaTBXr8nygNq5x4-"
}
```
